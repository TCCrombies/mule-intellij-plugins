//How to find output
ModuleRootManager.getInstance(module).getCompilerOutputPath();
//How to extend the debugger

    //To scan
    com.intellij.xml.util.XmlReferenceContributor
    
    
    //External Annotator!!!! para raml
    https://github.com/JetBrains/intellij-community/blob/master/platform/analysis-api/src/com/intellij/lang/annotation/ExternalAnnotator.java


//Playground for DW:

    - Persisting metadata set for DW: http://www.jetbrains.org/intellij/sdk/docs/basics/persisting_state_of_components.html

// store property
PropertiesComponent.getInstance().setValue( "mypropertystring", "hello world" );
// load property
String value = PropertiesComponent.getInstance().getValue( "mypropertystring" );


    - Find a way to specify the application/java for inputs;

    - Schemas/samples and autocompletion;


Add actions to "Extract to" - extract to flow

//-------------
First, you need to get the PSI elements at the start and end of selection:

psiFile.findElementAt(editor.getSelectionModel().getSelectionStart())

psiFile.findElementAt(editor.getSelectionModel().getSelectionEnd())

Then, in most languages an "Extract" refactoring cannot be applied to an arbitrary sequence of elements,
so you probably need to find a common statement or expression to which the selected elements belong.
PsiTreeUtil.getParentOfType() and PsiTreeUtil.findCommonParent() should help with this.
//---------------
