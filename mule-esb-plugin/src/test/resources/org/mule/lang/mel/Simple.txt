FILE
  MelImportExpressionImpl(IMPORT_EXPRESSION)
    PsiElement(import)('import')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('java')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('lang')
    PsiElement(.)('.')
    PsiElement(*)('*')
  PsiElement(BAD_CHARACTER)(';')
  PsiWhiteSpace('\n')
  MelFunctionDefinitionExpressionImpl(FUNCTION_DEFINITION_EXPRESSION)
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('a')
    PsiElement(()('(')
    MelParameterListImpl(PARAMETER_LIST)
      <empty list>
    PsiElement())(')')
    PsiWhiteSpace(' ')
    MelBlockExpressionImpl(BLOCK_EXPRESSION)
      PsiElement({)('{')
      PsiWhiteSpace('\n\n    ')
      MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
        PsiElement(IDENTIFIER)('b')
      PsiWhiteSpace(' ')
      MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
        PsiElement(IDENTIFIER)('instanceOf')
      PsiWhiteSpace(' ')
      MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
        PsiElement(IDENTIFIER)('c')
      PsiWhiteSpace('\n\n\n    ')
      MelForExpressionImpl(FOR_EXPRESSION)
        PsiElement(for)('for')
        PsiElement(()('(')
        PsiElement(IDENTIFIER)('a')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('name')
        PsiElement())(')')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n\n    ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n    ')
      MelReferenceExpressionImpl(REFERENCE_EXPRESSION)
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('a')
          PsiElement(.)('.')
          PsiElement(IDENTIFIER)('b')
        PsiElement(.)('.')
        PsiElement(?)('?')
        PsiElement(IDENTIFIER)('c')
      PsiWhiteSpace('\n\n    ')
      MelIndexedExpressionImpl(INDEXED_EXPRESSION)
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('a')
        PsiElement([)('[')
        MelLiteralExpressionImpl(LITERAL_EXPRESSION)
          PsiElement(STRING_LITERAL)('"b"')
        PsiElement(])(']')
      PsiWhiteSpace('\n\n    ')
      MelIndexedExpressionImpl(INDEXED_EXPRESSION)
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('c')
        PsiElement([)('[')
        MelLiteralExpressionImpl(LITERAL_EXPRESSION)
          PsiElement(INTEGER_LITERAL)('1')
        PsiElement(])(']')
      PsiWhiteSpace('\n\n    ')
      MelNewExpressionImpl(NEW_EXPRESSION)
        PsiElement(new)('new')
        PsiWhiteSpace(' ')
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('ArrayList')
        PsiElement(()('(')
        MelParameterListImpl(PARAMETER_LIST)
          <empty list>
        PsiElement())(')')
      PsiElement(BAD_CHARACTER)(';')
      PsiWhiteSpace('\n\n\n\n    ')
      MelWhileExpressionImpl(WHILE_EXPRESSION)
        PsiElement(while)('while')
        PsiElement(()('(')
        MelBinaryExpressionImpl(BINARY_EXPRESSION)
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('a')
          PsiWhiteSpace(' ')
          PsiElement(==)('==')
          PsiWhiteSpace(' ')
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('b')
        PsiElement())(')')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n    ')
      MelForExpressionImpl(FOR_EXPRESSION)
        PsiElement(for)('for')
        PsiElement(()('(')
        MelVariableAssignmentExpressionImpl(VARIABLE_ASSIGNMENT_EXPRESSION)
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('int')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          MelLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(INTEGER_LITERAL)('0')
        PsiElement(BAD_CHARACTER)(';')
        PsiWhiteSpace(' ')
        MelBinaryExpressionImpl(BINARY_EXPRESSION)
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(<)('<')
          PsiWhiteSpace(' ')
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('payload')
            PsiElement(.)('.')
            PsiElement(IDENTIFIER)('lenght')
        PsiWhiteSpace(' ')
        PsiElement(BAD_CHARACTER)(';')
        PsiWhiteSpace(' ')
        MelPostfixUnaryExpressionImpl(POSTFIX_UNARY_EXPRESSION)
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(++)('++')
        PsiElement())(')')
        PsiWhiteSpace(' ')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n        ')
          MelMethodCallExpressionImpl(METHOD_CALL_EXPRESSION)
            MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
              PsiElement(IDENTIFIER)('print')
            PsiElement(()('(')
            MelParameterListImpl(PARAMETER_LIST)
              MelLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(STRING_LITERAL)('"a"')
            PsiElement())(')')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n    ')
      MelDoWhileExpressionImpl(DO_WHILE_EXPRESSION)
        PsiElement(do)('do')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n     ')
          MelVariableAssignmentExpressionImpl(VARIABLE_ASSIGNMENT_EXPRESSION)
            PsiElement(IDENTIFIER)('a')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            PsiWhiteSpace(' ')
            MelLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(STRING_LITERAL)('""')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
        PsiElement(while)('while')
        PsiElement(()('(')
        MelBinaryExpressionImpl(BINARY_EXPRESSION)
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('a')
          PsiWhiteSpace(' ')
          PsiElement(>)('>')
          PsiWhiteSpace(' ')
          MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
            PsiElement(IDENTIFIER)('b')
        PsiElement())(')')
      PsiWhiteSpace('\n\n    ')
      MelIfExpressionImpl(IF_EXPRESSION)
        PsiElement(if)('if')
        PsiElement(()('(')
        MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
          PsiElement(IDENTIFIER)('a')
        PsiElement())(')')
        PsiWhiteSpace(' ')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n      ')
          MelVariableAssignmentExpressionImpl(VARIABLE_ASSIGNMENT_EXPRESSION)
            MelFqnTypeExpressionImpl(FQN_TYPE_EXPRESSION)
              PsiElement(IDENTIFIER)('String')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('a')
            PsiElement(=)('=')
            MelLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(STRING_LITERAL)('""')
          PsiElement(BAD_CHARACTER)(';')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
        PsiWhiteSpace('\n    ')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        MelBlockExpressionImpl(BLOCK_EXPRESSION)
          PsiElement({)('{')
          PsiWhiteSpace('\n    ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')