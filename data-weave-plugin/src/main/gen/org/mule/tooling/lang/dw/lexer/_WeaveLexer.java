/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

package org.mule.tooling.lang.dw.lexer;
import com.intellij.lexer.*;
import com.intellij.psi.tree.IElementType;
import static org.mule.tooling.lang.dw.parser.psi.WeaveTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>_WeaveLexer.flex</tt>
 */
public class _WeaveLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [12, 7, 2]
   * Total runtime size is 22360 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[(ZZ_CMAP_Z[ch>>9]<<7)|((ch>>2)&0x7f)]<<2)|(ch&0x3)];
  }

  /* The ZZ_CMAP_Z table has 2176 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1"+
    "\20\5\21\1\22\1\23\1\24\1\21\14\25\1\26\50\25\1\27\2\25\1\30\1\31\1\32\1\33"+
    "\25\25\1\34\20\21\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1"+
    "\21\1\50\1\51\1\52\1\53\1\54\1\55\2\21\1\25\1\56\1\57\5\21\2\25\1\60\7\21"+
    "\1\61\1\62\20\21\1\25\1\63\1\21\1\64\40\21\1\65\5\21\1\66\11\21\1\67\1\70"+
    "\1\71\1\72\10\21\1\73\2\21\1\74\10\21\123\25\1\75\7\25\1\76\1\77\12\61\1\100"+
    "\24\21\1\25\1\101\u0582\21\1\102\u017f\21");

  /* The ZZ_CMAP_Y table has 8576 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\2\0\1\1\1\2\3\0\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1"+
    "\17\1\16\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\10\0\1\33"+
    "\1\34\1\35\1\36\1\3\1\37\1\35\1\3\5\40\1\41\7\40\1\41\162\40\1\42\1\43\2\40"+
    "\1\42\3\3\1\40\1\44\1\3\1\45\4\3\34\0\1\40\1\46\1\43\1\47\1\3\1\35\1\41\1"+
    "\46\4\40\1\50\24\40\1\50\42\40\1\51\1\0\1\43\47\40\2\52\1\53\10\40\1\41\1"+
    "\37\1\3\1\53\11\40\1\3\1\54\1\55\12\0\1\56\1\57\1\56\2\3\6\40\1\41\1\3\1\41"+
    "\3\3\1\0\1\60\1\54\1\3\2\0\1\61\1\3\12\40\1\62\7\0\1\34\1\43\1\63\30\40\1"+
    "\64\1\0\1\56\1\0\1\65\1\66\1\67\2\0\1\67\1\70\3\3\1\54\1\71\7\40\6\0\1\61"+
    "\1\53\25\40\1\72\2\0\1\73\3\3\2\0\1\67\7\40\1\62\2\0\1\42\1\35\1\3\5\40\1"+
    "\72\1\74\2\0\2\75\1\34\4\3\6\40\1\75\21\3\1\76\2\40\1\77\1\52\1\100\13\3\6"+
    "\0\1\61\1\0\15\40\1\72\1\101\4\0\1\75\1\0\2\40\1\72\1\33\2\0\1\53\1\40\1\102"+
    "\1\40\1\103\1\53\1\40\2\70\5\40\1\46\1\40\1\45\1\43\1\42\1\101\1\0\2\104\1"+
    "\105\1\3\1\54\1\3\1\50\1\72\1\33\2\0\1\72\1\3\1\54\1\3\1\55\1\53\1\41\1\106"+
    "\1\70\5\40\1\46\1\40\1\46\1\107\1\42\1\66\1\61\1\54\1\104\1\34\1\36\1\3\1"+
    "\53\1\45\1\3\1\33\2\0\1\67\1\110\2\3\1\55\1\53\1\40\2\50\5\40\1\46\1\40\1"+
    "\46\1\53\1\42\1\101\1\0\2\56\1\34\1\44\3\3\1\72\1\33\2\0\1\36\1\3\1\111\1"+
    "\3\1\55\1\53\1\40\2\70\5\40\1\46\1\40\1\46\1\53\1\42\1\101\1\0\2\104\1\34"+
    "\1\3\1\33\1\3\1\50\1\72\1\33\2\0\1\37\3\3\1\112\1\53\1\41\1\43\1\46\1\42\1"+
    "\107\1\46\1\106\1\44\1\41\1\43\2\40\1\42\1\33\1\61\1\33\1\66\1\34\1\44\1\54"+
    "\3\3\1\33\2\0\2\3\1\36\1\3\1\55\1\53\1\40\2\46\5\40\1\46\2\40\1\102\1\42\1"+
    "\64\1\0\2\66\1\34\1\3\1\57\1\113\1\3\1\72\1\33\2\0\4\3\1\33\1\53\1\40\2\46"+
    "\5\40\1\46\2\40\1\53\1\42\1\101\1\0\2\66\1\34\1\3\1\57\1\3\1\35\1\72\1\33"+
    "\2\0\1\107\3\3\1\33\1\53\1\40\2\46\11\40\1\41\1\64\1\0\2\66\1\105\1\3\1\54"+
    "\1\3\1\114\1\72\1\33\2\0\2\3\1\43\1\40\1\33\1\53\3\40\1\41\1\43\5\40\1\50"+
    "\2\40\1\37\1\40\1\41\1\115\1\54\1\0\1\116\2\0\4\3\1\33\3\3\1\53\13\40\1\71"+
    "\1\0\1\61\1\54\1\40\1\62\1\0\1\61\2\0\1\34\11\3\1\107\1\70\1\45\1\37\1\3\1"+
    "\40\1\53\1\40\1\53\1\117\1\43\1\53\1\71\1\0\1\56\1\73\1\40\1\45\1\0\1\34\2"+
    "\0\1\34\1\40\10\3\1\44\5\3\1\34\1\3\2\0\1\34\2\3\1\120\1\36\1\33\2\40\1\53"+
    "\10\40\1\44\1\55\4\0\1\66\1\40\1\75\2\0\1\55\10\0\1\60\1\3\1\115\16\3\12\40"+
    "\1\62\4\0\1\121\2\0\1\34\1\3\1\40\1\72\1\67\1\72\1\101\1\65\1\0\1\67\1\75"+
    "\1\63\2\40\1\72\2\0\1\74\3\0\1\34\11\40\1\50\1\3\1\37\12\40\1\41\123\40\1"+
    "\46\1\42\1\40\1\41\1\46\1\42\12\40\1\46\1\42\10\40\1\46\1\42\1\40\1\41\1\46"+
    "\1\42\3\40\1\41\16\40\1\46\1\42\20\40\1\41\1\55\10\3\4\40\4\3\25\40\1\122"+
    "\1\52\1\123\1\53\232\40\1\70\4\40\1\53\5\40\1\41\1\3\22\40\1\41\1\33\1\124"+
    "\1\52\1\100\1\3\3\40\1\46\1\72\1\60\2\3\4\40\1\72\1\60\2\3\4\40\1\72\3\3\3"+
    "\40\1\46\1\125\3\3\15\40\10\0\1\106\1\54\1\110\2\0\1\34\7\3\1\54\1\34\2\0"+
    "\1\34\1\3\26\40\2\3\12\40\1\126\1\3\21\40\1\42\2\3\7\40\1\127\3\0\1\3\3\0"+
    "\2\3\1\33\2\0\7\40\1\42\1\40\1\44\2\3\13\40\1\3\6\40\1\42\1\3\2\0\1\34\11"+
    "\3\5\40\1\62\1\0\1\3\15\40\1\75\1\0\1\61\7\0\1\104\2\0\1\34\1\3\2\0\1\34\2"+
    "\3\1\106\26\3\1\0\1\63\13\40\4\0\1\63\1\40\1\3\2\0\1\34\3\3\1\54\2\0\3\3\1"+
    "\121\7\40\1\75\2\0\1\67\2\0\1\67\12\40\1\72\3\0\3\3\11\40\5\0\2\3\2\0\1\34"+
    "\1\53\2\0\1\67\10\40\1\42\24\3\1\61\5\0\1\63\1\71\1\72\1\130\2\3\60\40\11"+
    "\0\1\61\5\3\1\0\105\40\1\42\1\40\1\42\11\40\1\42\1\40\1\42\2\40\2\117\7\40"+
    "\1\42\15\40\1\46\1\40\1\45\1\43\1\46\1\40\1\44\1\40\1\43\1\40\1\3\3\40\1\44"+
    "\1\43\1\46\1\40\1\44\2\3\1\54\1\0\6\3\1\33\1\61\3\3\1\54\1\60\4\3\1\60\2\3"+
    "\1\0\1\60\1\33\1\0\1\37\2\3\1\106\4\3\3\40\1\44\6\0\1\61\5\3\3\0\1\60\1\36"+
    "\1\55\2\0\1\60\3\3\1\35\1\106\1\43\2\40\1\37\1\53\1\42\1\3\1\45\1\46\1\50"+
    "\2\40\1\42\1\40\1\3\1\53\1\42\1\35\4\3\10\0\1\121\1\75\1\60\235\3\13\40\1"+
    "\41\13\40\1\41\41\40\1\44\1\106\1\62\1\67\3\3\11\40\1\50\1\3\1\37\16\40\1"+
    "\3\1\106\3\3\1\54\5\40\1\41\2\3\1\40\1\41\1\40\1\41\1\40\1\41\1\40\1\41\1"+
    "\40\1\41\1\40\1\41\1\40\1\41\1\40\1\41\10\0\13\3\1\106\165\3\1\131\6\3\1\55"+
    "\3\0\1\53\1\42\1\121\1\44\1\53\24\40\1\41\1\57\2\53\25\40\1\41\1\40\1\3\1"+
    "\53\11\40\1\42\1\53\26\40\1\41\4\3\6\40\1\41\15\3\361\40\1\42\22\3\163\40"+
    "\1\77\1\52\1\123\12\3\43\40\1\44\20\3\13\40\1\42\103\40\1\44\4\40\2\0\1\67"+
    "\5\3\13\40\1\62\1\3\2\0\1\132\6\40\1\52\1\133\21\40\1\72\2\0\1\34\10\3\1\106"+
    "\2\40\1\43\31\40\1\70\1\134\1\40\3\52\2\40\1\134\1\123\2\52\17\3\1\114\2\40"+
    "\2\135\1\62\5\40\1\62\1\0\4\3\1\60\1\3\15\40\3\3\1\67\14\40\4\0\1\60\2\3\2"+
    "\0\1\34\1\3\4\0\1\67\1\40\1\106\1\111\2\0\1\67\6\40\1\72\1\0\1\34\5\40\1\62"+
    "\3\0\3\3\7\40\1\44\1\0\13\40\1\62\3\0\1\60\2\3\1\106\2\0\1\34\1\3\1\52\1\136"+
    "\2\52\2\3\1\137\1\140\12\40\1\75\2\0\1\61\2\3\1\62\2\40\1\34\2\0\1\34\1\3"+
    "\5\40\1\41\1\141\1\137\14\40\1\101\1\65\1\63\1\72\1\126\5\3\1\106\1\42\2\40"+
    "\1\62\1\0\1\43\1\142\2\3\1\53\1\41\1\53\1\41\1\53\1\41\2\3\1\40\1\41\1\40"+
    "\1\41\12\52\1\140\2\52\1\123\2\3\24\52\10\40\1\62\1\0\1\61\1\34\2\0\1\34\1"+
    "\3\151\40\3\3\5\40\1\41\1\106\14\40\101\3\133\40\1\42\32\40\1\42\11\3\1\40"+
    "\1\41\2\3\1\106\1\40\1\3\1\143\2\40\1\46\2\40\1\41\1\40\1\45\1\50\1\46\32"+
    "\40\1\42\7\3\1\106\132\40\1\42\4\3\20\40\1\43\15\40\12\3\3\40\1\60\4\0\4\3"+
    "\1\0\1\61\2\3\1\54\1\60\5\3\1\55\6\3\1\36\1\3\1\40\1\46\41\40\1\144\1\3\1"+
    "\60\2\3\2\0\1\34\1\3\1\53\5\40\1\41\1\54\1\53\5\40\1\41\2\3\1\43\25\40\1\41"+
    "\1\43\1\40\1\43\1\40\1\43\1\40\1\43\1\44\1\34\1\57\4\3\1\55\1\3\3\40\1\53"+
    "\5\40\1\41\4\40\1\41\1\50\3\40\1\42\3\40\1\42\10\3\36\40\1\41\21\3\15\0\1"+
    "\60\41\3\1\36\40\3\7\40\1\44\14\40\1\44\13\3\7\40\1\134\4\3\4\40\1\71\1\40"+
    "\1\145\1\3\11\52\1\123\2\3\7\40\1\42\11\40\1\3\2\40\1\55\1\34\12\3\47\40\1"+
    "\42\2\0\1\34\25\3\12\52\2\3\15\52\47\3\115\52\1\140\2\3\5\52\1\123\2\3\2\52"+
    "\46\3\1\40\1\42\1\46\12\40\1\50\1\44\1\70\5\40\1\42\2\3\5\52\1\140\2\3\7\52"+
    "\1\140\20\3\4\52\1\140\1\123\2\3\5\40\1\42\2\3\6\40\1\42\21\3\16\40\1\3\1"+
    "\43\20\3\1\75\1\57\1\3\1\0\1\40\2\53\6\40\1\3\1\61\1\54\10\3\7\40\1\44\7\52"+
    "\1\100\10\3\2\52\1\146\6\52\1\100\6\3\15\40\1\42\2\3\5\40\1\42\2\3\4\40\1"+
    "\41\3\3\4\52\1\123\33\3\22\40\1\44\15\3\14\52\1\140\3\3\14\52\1\140\103\3"+
    "\1\121\15\40\3\0\1\61\7\3\1\33\2\0\4\3\1\121\13\40\2\0\1\61\1\36\4\3\6\40"+
    "\1\44\1\3\2\0\1\34\1\3\1\121\10\40\1\62\3\0\1\66\2\0\4\3\10\52\1\140\1\147"+
    "\2\3\1\121\13\40\1\62\3\0\1\63\1\44\2\3\2\0\1\150\1\100\10\3\4\52\1\151\6"+
    "\52\25\3\1\52\1\140\1\136\1\151\3\52\1\151\2\52\1\100\1\3\13\52\1\140\11\3"+
    "\1\146\1\52\2\152\5\52\1\136\1\52\1\136\1\146\1\123\1\111\4\3\1\100\2\3\1"+
    "\146\1\123\107\3\14\52\5\3\1\151\56\3\13\52\1\140\12\3\1\52\11\3\14\52\5\3"+
    "\1\100\16\3\12\40\1\62\3\0\2\3\2\0\1\34\15\3\6\52\1\123\141\3\20\52\7\3\1"+
    "\114\160\3\16\52\1\100\101\3\133\40\1\134\12\52\1\123\31\3\30\0\1\61\7\3\61"+
    "\52\57\3\13\40\1\41\164\3\221\52\1\140\156\3\16\40\1\44\1\3\7\52\1\140\34"+
    "\3\7\52\1\123\4\3\14\52\4\3\1\52\7\3\1\114\5\52\1\3\1\146\4\52\134\3\21\40"+
    "\1\44\2\3\1\75\12\0\1\61\3\3\1\54\1\121\3\40\30\3\1\42\177\3\32\52\1\140\1"+
    "\3\3\52\1\100\2\52\1\100\1\3\2\52\1\123\262\3\1\55\1\34\1\55\4\0\1\61\1\55"+
    "\1\0\7\3\1\33\1\34\44\3\1\33\1\60\156\3\25\40\1\46\21\40\1\46\1\35\1\107\1"+
    "\53\1\46\2\40\1\50\1\53\1\40\1\53\17\40\1\50\1\41\1\53\1\40\1\46\1\40\1\46"+
    "\6\40\1\50\1\41\1\40\1\45\1\43\1\40\1\46\124\40\1\42\6\40\1\46\5\40\1\41\7"+
    "\40\1\41\6\40\1\46\7\40\1\46\5\40\1\41\7\40\1\41\6\40\1\46\7\40\1\46\5\40"+
    "\1\41\2\40\1\33\14\0\61\52\1\100\116\3\1\40\1\53\6\40\1\107\1\70\1\53\1\40"+
    "\1\41\1\40\1\117\1\3\1\35\1\106\1\117\1\53\1\107\1\70\2\117\1\107\1\70\1\41"+
    "\1\40\1\41\1\40\1\53\1\45\2\40\1\50\4\40\1\3\2\53\1\50\4\40\121\3\65\40\1"+
    "\41\12\3\215\40\1\44\2\3\67\40\1\42\240\52\1\123\127\3\7\40\1\42\170\3\1\36"+
    "\7\3\30\0\40\3\74\0\4\3");

  /* The ZZ_CMAP_A table has 428 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\5\16\1\2\1\1\1\0\1\2\1\1\2\16\4\0\1\2\1\73\1\5\1\103\1\102\1\77\1\12\1\7"+
    "\1\64\1\65\1\76\1\25\1\70\1\26\1\3\1\4\1\27\11\21\1\11\1\0\1\71\1\74\1\72"+
    "\1\101\1\100\1\24\1\53\2\24\1\31\11\24\1\37\3\24\1\57\3\24\1\32\1\6\1\33\1"+
    "\104\1\17\1\0\1\35\1\40\1\42\1\50\1\30\1\46\1\51\1\60\1\47\1\41\1\45\1\44"+
    "\1\34\1\15\1\52\1\36\1\63\1\14\1\56\1\43\1\13\1\62\1\55\1\10\1\54\1\61\1\66"+
    "\1\20\1\67\1\75\1\16\2\0\4\16\4\0\1\23\2\0\1\16\3\0\1\23\2\0\7\23\1\0\2\23"+
    "\4\0\3\23\3\0\1\23\1\0\1\23\1\0\1\23\1\0\4\23\1\0\1\22\2\23\1\0\3\23\1\0\1"+
    "\16\4\22\1\0\3\23\3\0\1\16\1\0\5\16\1\0\1\16\1\0\2\16\1\0\1\16\3\0\3\16\1"+
    "\0\3\23\2\16\3\23\1\0\1\23\3\16\2\23\2\16\1\0\4\16\3\23\2\0\2\23\1\16\4\23"+
    "\3\16\1\23\2\0\2\16\1\23\1\16\1\23\3\16\1\23\1\22\3\23\4\22\3\0\1\16\1\23"+
    "\2\16\1\22\3\23\1\22\4\16\2\0\3\16\1\23\4\0\1\23\1\0\2\23\1\0\1\23\1\16\3"+
    "\0\1\22\4\0\1\16\3\23\1\22\4\0\1\22\2\0\1\16\1\0\1\16\1\0\1\16\2\0\1\23\1"+
    "\0\1\23\1\0\1\16\1\0\4\16\2\23\1\22\2\0\2\22\2\0\1\16\3\22\1\23\1\0\2\16\1"+
    "\23\1\16\1\23\1\0\1\23\2\22\1\0\1\16\2\23\2\0\2\23\3\16\1\0\1\23\2\22\1\0"+
    "\1\16\3\23\1\22\2\23\1\16\1\23\1\22\1\0\2\22\2\0\5\22\3\0\1\23\1\16\1\23\2"+
    "\16\2\0\1\23\1\16\2\23\2\0\1\16\2\23\1\16\2\0\3\22\2\0\1\22\1\0\2\16\1\22"+
    "\1\0\2\22\1\0\2\22\2\0\1\22");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\3\6\1\11\1\12\1\6\1\13\1\14\1\12"+
    "\1\6\1\15\1\16\17\6\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\1\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\0\1\37\1\0"+
    "\1\4\2\0\1\5\2\0\1\6\1\0\1\40\1\41"+
    "\10\6\1\0\1\42\2\43\1\12\1\44\1\12\1\44"+
    "\1\45\1\0\1\6\3\0\5\6\1\46\10\6\1\44"+
    "\5\6\1\47\4\6\1\50\12\6\1\51\1\52\1\53"+
    "\1\54\1\55\1\56\1\57\7\0\1\60\1\61\1\0"+
    "\12\6\1\62\1\63\1\43\1\64\1\6\1\0\1\65"+
    "\1\6\1\65\1\66\30\6\1\67\4\0\1\70\4\0"+
    "\10\6\1\71\1\6\1\0\10\6\1\72\13\6\1\73"+
    "\1\74\3\6\5\0\1\75\2\76\2\6\1\77\3\6"+
    "\3\0\1\6\1\100\4\6\1\101\10\6\1\0\1\102"+
    "\3\0\1\103\3\6\1\104\2\6\1\44\2\6\1\62"+
    "\5\6\2\0\1\105\1\0\1\6\1\106\3\6\1\107"+
    "\1\6\1\65\1\6\2\0\1\110\3\6\2\0\1\111"+
    "\1\0\1\112\1\113";

  private static int [] zzUnpackAction() {
    int [] result = new int[309];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\105\0\212\0\317\0\u0114\0\u0159\0\u019e\0\u01e3"+
    "\0\u0228\0\u026d\0\u02b2\0\u02f7\0\u033c\0\u0381\0\u03c6\0\u040b"+
    "\0\u0450\0\u0495\0\u04da\0\u051f\0\105\0\u0564\0\u05a9\0\u05ee"+
    "\0\u0633\0\u0678\0\u06bd\0\u0702\0\u0747\0\u078c\0\u07d1\0\u0816"+
    "\0\u085b\0\u08a0\0\u08e5\0\u092a\0\105\0\105\0\105\0\105"+
    "\0\105\0\u096f\0\u09b4\0\u09f9\0\u0a3e\0\u0a83\0\105\0\u0ac8"+
    "\0\105\0\105\0\105\0\105\0\105\0\u0b0d\0\u0b52\0\u0b97"+
    "\0\105\0\u0bdc\0\u0c21\0\105\0\u0c66\0\u0cab\0\u0cf0\0\u0d35"+
    "\0\u01e3\0\105\0\u0d7a\0\u0dbf\0\u0e04\0\u0e49\0\u0e8e\0\u0ed3"+
    "\0\u0f18\0\u0f5d\0\u0fa2\0\105\0\u0fe7\0\u102c\0\u1071\0\105"+
    "\0\105\0\u10b6\0\105\0\u0495\0\u10fb\0\u1140\0\u1185\0\u11ca"+
    "\0\u120f\0\u1254\0\u1299\0\u12de\0\u1323\0\u019e\0\u1368\0\u13ad"+
    "\0\u13f2\0\u1437\0\u147c\0\u14c1\0\u1506\0\u154b\0\u019e\0\u1590"+
    "\0\u15d5\0\u161a\0\u165f\0\u16a4\0\u019e\0\u16e9\0\u172e\0\u1773"+
    "\0\u17b8\0\u17fd\0\u1842\0\u1887\0\u18cc\0\u1911\0\u1956\0\u199b"+
    "\0\u19e0\0\u1a25\0\u1a6a\0\u1aaf\0\105\0\105\0\u1af4\0\105"+
    "\0\105\0\105\0\105\0\u1b39\0\u1b7e\0\u1bc3\0\u1c08\0\u1c4d"+
    "\0\u1c92\0\u1cd7\0\105\0\u1d1c\0\u1d61\0\u1da6\0\u1deb\0\u1e30"+
    "\0\u1e75\0\u1eba\0\u1eff\0\u1f44\0\u1f89\0\u1fce\0\u2013\0\u019e"+
    "\0\105\0\u2058\0\105\0\u209d\0\u20e2\0\u2127\0\u216c\0\u019e"+
    "\0\u019e\0\u21b1\0\u21f6\0\u223b\0\u2280\0\u22c5\0\u230a\0\u234f"+
    "\0\u2394\0\u23d9\0\u241e\0\u2463\0\u24a8\0\u24ed\0\u2532\0\u2577"+
    "\0\u25bc\0\u2601\0\u2646\0\u268b\0\u26d0\0\u2715\0\u275a\0\u279f"+
    "\0\u27e4\0\105\0\u2829\0\u286e\0\u28b3\0\u28f8\0\105\0\u293d"+
    "\0\u2982\0\u29c7\0\u2a0c\0\u2a51\0\u2a96\0\u2adb\0\u2b20\0\u2b65"+
    "\0\u2baa\0\u2bef\0\u2c34\0\u019e\0\u2c79\0\u2cbe\0\u2d03\0\u2d48"+
    "\0\u2d8d\0\u2dd2\0\u2e17\0\u2e5c\0\u2ea1\0\u2ee6\0\u019e\0\u2f2b"+
    "\0\u2f70\0\u2fb5\0\u2ffa\0\u303f\0\u3084\0\u30c9\0\u310e\0\u3153"+
    "\0\u3198\0\u31dd\0\u019e\0\u019e\0\u3222\0\u3267\0\u32ac\0\u32f1"+
    "\0\u3336\0\u337b\0\u33c0\0\u3405\0\105\0\u29c7\0\u344a\0\u348f"+
    "\0\u34d4\0\u019e\0\u3519\0\u355e\0\u35a3\0\u35e8\0\u362d\0\u3672"+
    "\0\u36b7\0\u36fc\0\u3741\0\u3786\0\u37cb\0\u3810\0\u019e\0\u3855"+
    "\0\u389a\0\u38df\0\u3924\0\u3969\0\u39ae\0\u39f3\0\u3a38\0\u3a7d"+
    "\0\105\0\u3ac2\0\u3b07\0\u3b4c\0\u019e\0\u3b91\0\u3bd6\0\u3c1b"+
    "\0\105\0\u3c60\0\u3ca5\0\u03c6\0\u3cea\0\u3d2f\0\u03c6\0\u3d74"+
    "\0\u3db9\0\u3dfe\0\u3e43\0\u3e88\0\u3ecd\0\u3f12\0\105\0\u3f57"+
    "\0\u3f9c\0\u019e\0\u3fe1\0\u4026\0\u406b\0\u019e\0\u40b0\0\u03c6"+
    "\0\u40f5\0\u413a\0\u417f\0\105\0\u41c4\0\u4209\0\u424e\0\u4293"+
    "\0\u42d8\0\u019e\0\u431d\0\105\0\105";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[309];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\2\1\4\1\5\1\2\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\2\2\1\15\1\16"+
    "\3\17\1\20\1\21\1\22\1\23\1\17\1\24\1\25"+
    "\1\26\1\27\1\30\1\17\1\7\1\31\1\32\1\33"+
    "\1\34\1\7\1\35\1\36\1\37\1\40\1\41\1\17"+
    "\1\7\1\42\1\43\1\17\1\7\1\44\2\7\1\45"+
    "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55"+
    "\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\106\0\2\3\102\0\1\66\1\0\2\66\1\67\1\66"+
    "\1\70\76\66\1\5\1\0\3\5\1\71\1\72\76\5"+
    "\1\6\1\0\4\6\1\73\1\74\75\6\4\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\12\0\1\101\2\0\3\101\12\0\1\101\3\0\3\101"+
    "\1\0\13\101\1\0\3\101\1\0\4\101\33\0\1\102"+
    "\76\0\1\75\3\0\1\7\1\76\1\0\1\7\1\103"+
    "\1\104\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\2\7\1\105\1\17\13\7\1\17"+
    "\2\7\1\106\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\107\1\17\2\0\3\7"+
    "\1\17\12\7\1\110\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\1\111"+
    "\2\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\12\7\1\112\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\2\0\1\113\1\0"+
    "\16\113\1\114\64\113\3\0\1\115\15\0\1\16\5\0"+
    "\1\16\2\116\57\0\1\75\3\0\1\17\2\0\3\17"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\2\17"+
    "\2\0\30\17\16\0\1\77\23\0\1\117\3\0\1\120"+
    "\1\0\1\121\76\0\1\117\4\0\1\122\1\121\42\0"+
    "\1\123\15\0\1\115\15\0\1\124\5\0\1\124\2\116"+
    "\57\0\1\75\3\0\1\7\1\76\1\0\2\7\1\125"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\23\0\1\126\3\0\2\127\1\130"+
    "\61\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\1\7\1\131\1\7\1\17\7\7\1\132\2\7"+
    "\1\133\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\2\7\1\134\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\1\135\12\7\1\17\2\7\1\136"+
    "\1\17\2\7\1\137\1\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\4\7\1\140\5\7\1\141\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\12\7\1\142"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\143\1\17\2\0\1\7"+
    "\1\144\1\7\1\17\12\7\1\145\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\1\7\1\146\1\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\12\7\1\147\1\17\1\150\2\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\12\7\1\151\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\1\7\1\152\1\7"+
    "\1\17\4\7\1\153\2\7\1\154\3\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\2\7\1\155\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\156\1\17\2\0"+
    "\1\7\1\157\1\7\1\17\7\7\1\160\3\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\1\7\1\161\1\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\1\7"+
    "\1\162\1\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\3\7\1\163"+
    "\7\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\7\7\1\164\3\7\1\17\3\7\1\17"+
    "\1\165\3\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\1\166\2\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\2\7\1\167"+
    "\1\17\2\7\1\170\1\171\3\7\1\172\3\7\1\17"+
    "\3\7\1\17\3\7\1\173\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\174\3\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\73\0\1\175\2\0\1\176\102\0\1\177"+
    "\1\0\1\200\104\0\1\201\104\0\1\202\104\0\1\203"+
    "\25\0\1\204\25\0\1\205\2\0\1\206\1\207\1\210"+
    "\1\0\1\211\7\0\1\212\22\0\1\66\1\0\2\66"+
    "\1\213\1\66\1\70\76\66\1\67\1\0\103\67\1\66"+
    "\1\0\103\66\1\5\1\0\103\5\1\6\1\0\103\6"+
    "\4\0\1\75\3\0\1\214\2\0\3\214\4\0\3\214"+
    "\3\0\2\214\2\0\30\214\25\0\1\215\110\0\1\77"+
    "\2\0\5\77\1\0\1\77\1\0\2\77\2\0\3\77"+
    "\2\0\30\77\16\0\1\77\6\0\1\75\3\0\1\100"+
    "\2\0\3\100\4\0\3\100\3\0\2\100\2\0\30\100"+
    "\25\0\1\75\3\0\1\7\1\76\1\0\2\7\1\216"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\4\7\1\217"+
    "\3\7\1\220\2\7\1\17\3\7\1\17\1\7\1\221"+
    "\2\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\2\7\1\222\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\223\3\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\2\7\1\224\1\17\10\7\1\225"+
    "\2\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\1\226\2\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\4\7\1\227\6\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\3\7\1\230\7\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\2\0\1\113\1\0\16\113\1\231\64\113"+
    "\21\0\1\115\5\0\1\115\2\116\74\0\1\232\3\0"+
    "\3\232\76\0\1\117\5\0\1\117\103\0\1\233\62\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\10\7\1\234\2\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\5\0\1\235\15\0\1\126\5\0"+
    "\1\126\76\0\1\126\5\0\1\130\60\0\1\235\105\0"+
    "\1\75\3\0\1\230\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\2\7\1\236\1\17\3\7\1\237\7\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\2\7\1\230\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\10\7\1\240\2\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\10\7\1\241"+
    "\2\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\230\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\11\7\1\230\1\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\1\242\2\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\1\7\1\240"+
    "\1\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\7\7\1\243\3\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\7\7\1\244\3\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\1\245\1\7"+
    "\1\246\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\2\7"+
    "\1\247\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\1\250\2\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\7\7\1\166\3\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\2\7\1\251\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\1\7\1\222\1\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\4\7\1\252\6\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\1\7\1\253\1\7"+
    "\1\17\12\7\1\254\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\2\7"+
    "\1\133\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\4\7\1\255\6\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\6\7\1\256\4\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\257\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\2\7\1\260\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\12\7\1\261\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\10\7\1\262"+
    "\2\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\1\263\3\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\3\7\1\264\7\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\265\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\1\230\2\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\4\7\1\266"+
    "\6\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\1\7\1\267\1\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\1\7\1\270\1\7\1\17"+
    "\13\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\2\7\1\271\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\1\7"+
    "\1\251\2\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\1\7\1\112\1\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\2\7\1\147\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\74\0\1\272\47\0\1\273\123\0"+
    "\1\274\43\0\1\275\106\0\1\276\144\0\1\277\42\0"+
    "\1\300\126\0\1\301\57\0\1\214\2\0\3\214\4\0"+
    "\3\214\3\0\2\214\2\0\30\214\25\0\1\302\104\0"+
    "\1\75\3\0\1\7\1\303\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\304"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\305\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\7\7\1\306\3\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\307"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\2\7\1\310\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\4\7\1\311\6\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\1\312\2\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\2\7\1\313\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\4\7\1\314\6\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\23\0\1\232\5\0\1\232"+
    "\61\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\315\1\17"+
    "\4\7\16\0\1\77\5\0\1\316\105\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\317"+
    "\13\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\2\7\1\320\10\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\1\7\1\321\1\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\2\7\1\322\10\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\2\7"+
    "\1\323\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\4\7"+
    "\1\230\6\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\324\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\7\7\1\325\3\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\3\7\1\326\7\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\327\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\330\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\331\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\3\7\1\332\7\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\12\7\1\307\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\3\7\1\333\7\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\1\7\1\334\1\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\1\335"+
    "\3\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\3\7\1\336"+
    "\7\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\1\337\2\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\340\1\17\2\0\3\7\1\17\7\7\1\341\3\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\342\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\1\343"+
    "\3\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\2\7\1\344\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\345\3\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\2\7\1\240\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\1\7\1\346\1\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\11\7\1\347\1\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\36\0\1\350\106\0"+
    "\1\351\63\0\1\352\125\0\1\353\111\0\1\354\55\0"+
    "\1\355\73\0\2\356\3\0\6\356\1\0\1\356\1\0"+
    "\1\356\2\0\1\356\1\0\4\356\2\0\30\356\10\0"+
    "\1\356\4\0\1\356\6\0\1\357\1\215\3\0\6\357"+
    "\1\0\1\357\1\0\1\357\2\0\1\357\1\0\4\357"+
    "\2\0\30\357\10\0\1\357\4\0\1\357\7\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\2\7\1\360\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\1\7"+
    "\1\361\1\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\2\7\1\230"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\1\7\1\230"+
    "\1\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\11\7"+
    "\1\362\1\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\1\7\1\363\1\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\2\7"+
    "\1\364\10\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\10\7\1\230\2\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\13\7"+
    "\1\17\3\7\1\365\4\7\16\0\1\77\23\0\1\366"+
    "\3\0\2\367\1\370\61\0\1\75\3\0\1\17\2\0"+
    "\3\17\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\2\17\2\0\4\17\1\371\23\17\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\1\372\3\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\1\7\1\324\1\7\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\5\7\1\240\5\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\373\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\4\7"+
    "\1\374\6\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\3\7\1\321\7\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\1\7\1\375\1\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\376\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\377\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\3\7"+
    "\1\u0100\7\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\u0101\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\1\u0102\2\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\u0103\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\7\7\1\u0104\3\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\2\7\1\u0105\1\17\13\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\1\7\1\u0105\1\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\2\7\1\321\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\1\7\1\u0106\1\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\3\7\1\323\7\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\3\7\1\234\7\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\1\u0107"+
    "\2\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\32\0\1\u0108\104\0\1\u0109"+
    "\116\0\1\u010a\55\0\1\u010b\127\0\1\u010c\51\0\1\357"+
    "\4\0\6\357\1\0\1\357\1\0\1\357\2\0\1\357"+
    "\1\0\4\357\2\0\30\357\10\0\1\357\4\0\1\357"+
    "\7\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\2\7\1\u010d\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\17"+
    "\2\7\1\u010e\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\2\7\1\u010f\10\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\240\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\17"+
    "\2\0\3\17\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\2\17\2\0\13\17\1\u0110\14\17\16\0\1\77"+
    "\23\0\1\366\5\0\1\366\3\0\1\u0111\72\0\1\366"+
    "\5\0\1\370\110\0\1\u0111\55\0\1\75\3\0\1\17"+
    "\2\0\3\17\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\2\17\2\0\5\17\1\u0112\22\17\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\u0113\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\17\2\0\3\17"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\2\17"+
    "\2\0\20\17\1\u0114\7\17\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\7\7\1\u0115\3\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\7\7\1\u0116\3\7"+
    "\1\17\3\7\1\17\4\7\16\0\1\77\6\0\1\75"+
    "\3\0\1\17\2\0\3\17\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\2\17\2\0\12\17\1\u0117\15\17"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\132\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\1\7\1\240\1\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\4\7\1\u0118\6\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\1\7\1\374\1\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\2\7\1\u0119"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\13\7\1\u011a"+
    "\3\7\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\1\7\1\u011b\1\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\7"+
    "\1\17\2\0\3\7\1\17\4\7\1\u011c\6\7\1\17"+
    "\3\7\1\17\4\7\16\0\1\77\60\0\1\u011d\71\0"+
    "\1\u011e\104\0\1\u011f\54\0\1\u0120\75\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\2\7\1\u0121\10\7\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\u0122"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\17\2\0"+
    "\3\17\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\2\17\2\0\7\17\1\u0123\20\17\16\0\1\77\6\0"+
    "\1\75\3\0\1\17\2\0\3\17\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\u0124\1\17\2\0\30\17"+
    "\16\0\1\77\6\0\1\75\3\0\1\7\1\76\1\0"+
    "\3\7\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\2\7"+
    "\1\147\1\17\4\7\16\0\1\77\6\0\1\75\3\0"+
    "\1\7\1\76\1\0\3\7\2\77\1\0\1\77\1\100"+
    "\2\17\2\0\1\77\1\7\1\17\2\0\3\7\1\17"+
    "\13\7\1\17\3\7\1\17\1\7\1\u0125\2\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\2\7"+
    "\1\u0113\2\77\1\0\1\77\1\100\2\17\2\0\1\77"+
    "\1\7\1\17\2\0\3\7\1\17\13\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\3\7\1\17\3\7"+
    "\1\u0126\7\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\2\7\1\u0127\10\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\17"+
    "\2\0\3\17\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\2\17\2\0\20\17\1\u0128\7\17\16\0\1\77"+
    "\6\0\1\75\3\0\1\7\1\76\1\0\3\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\7\7\1\u0129\3\7\1\17\3\7"+
    "\1\17\4\7\16\0\1\77\6\0\1\75\3\0\1\7"+
    "\1\76\1\0\3\7\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\1\7\1\17\2\0\1\7\1\u0103\1\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\40\0\1\u012a\115\0\1\u012b\100\0\1\u012c\45\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\7\1\17\2\0\3\7"+
    "\1\17\12\7\1\u012d\1\17\3\7\1\17\4\7\16\0"+
    "\1\77\6\0\1\75\3\0\1\17\2\0\3\17\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\2\17\2\0"+
    "\24\17\1\u0114\3\17\16\0\1\77\6\0\1\75\3\0"+
    "\1\17\2\0\3\17\2\77\1\0\1\77\1\100\2\17"+
    "\2\0\1\77\2\17\2\0\6\17\1\u012e\21\17\16\0"+
    "\1\77\6\0\1\75\3\0\1\7\1\76\1\0\3\7"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\1\230"+
    "\1\17\2\0\3\7\1\17\13\7\1\17\3\7\1\17"+
    "\4\7\16\0\1\77\6\0\1\75\3\0\1\7\1\76"+
    "\1\0\3\7\2\77\1\0\1\77\1\100\2\17\2\0"+
    "\1\77\1\7\1\17\2\0\3\7\1\17\3\7\1\u0105"+
    "\7\7\1\17\3\7\1\17\4\7\16\0\1\77\6\0"+
    "\1\75\3\0\1\7\1\76\1\0\3\7\2\77\1\0"+
    "\1\77\1\100\2\17\2\0\1\77\1\7\1\17\2\0"+
    "\3\7\1\17\13\7\1\17\2\7\1\u012f\1\17\4\7"+
    "\16\0\1\77\37\0\1\u0130\121\0\1\u0131\36\0\1\75"+
    "\3\0\1\7\1\76\1\0\1\7\1\u0125\1\7\2\77"+
    "\1\0\1\77\1\100\2\17\2\0\1\77\1\7\1\17"+
    "\2\0\3\7\1\17\13\7\1\17\3\7\1\17\4\7"+
    "\16\0\1\77\6\0\1\75\3\0\1\17\2\0\3\17"+
    "\2\77\1\0\1\77\1\100\2\17\2\0\1\77\2\17"+
    "\2\0\7\17\1\u0128\20\17\16\0\1\77\6\0\1\75"+
    "\3\0\1\7\1\76\1\0\3\7\2\77\1\0\1\77"+
    "\1\100\2\17\2\0\1\77\1\u0132\1\17\2\0\3\7"+
    "\1\17\13\7\1\17\3\7\1\17\4\7\16\0\1\77"+
    "\44\0\1\u0133\57\0\1\u0134\117\0\1\u0135\54\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[17250];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\22\1\1\11\17\1\5\11\5\1\1\11"+
    "\1\1\5\11\1\0\1\1\1\0\1\11\2\0\1\11"+
    "\2\0\1\1\1\0\1\1\1\11\10\1\1\0\1\11"+
    "\3\1\2\11\1\1\1\11\1\0\1\1\3\0\44\1"+
    "\2\11\1\1\4\11\7\0\1\11\1\1\1\0\13\1"+
    "\1\11\1\1\1\11\1\1\1\0\34\1\1\11\4\0"+
    "\1\11\4\0\12\1\1\0\31\1\5\0\1\11\10\1"+
    "\3\0\17\1\1\0\1\11\3\0\4\1\1\11\13\1"+
    "\2\0\1\11\1\0\11\1\2\0\1\11\3\1\2\0"+
    "\1\1\1\0\2\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[309];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _WeaveLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _WeaveLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return com.intellij.psi.TokenType.BAD_CHARACTER;
            }
          case 76: break;
          case 2: 
            { return com.intellij.psi.TokenType.WHITE_SPACE;
            }
          case 77: break;
          case 3: 
            { return DIVISION;
            }
          case 78: break;
          case 4: 
            { return DOUBLE_QUOTED_STRING;
            }
          case 79: break;
          case 5: 
            { return SINGLE_QUOTED_STRING;
            }
          case 80: break;
          case 6: 
            { return ID;
            }
          case 81: break;
          case 7: 
            { return COLON;
            }
          case 82: break;
          case 8: 
            { return AND;
            }
          case 83: break;
          case 9: 
            { return OR;
            }
          case 84: break;
          case 10: 
            { return INTEGER_LITERAL;
            }
          case 85: break;
          case 11: 
            { return PLUS;
            }
          case 86: break;
          case 12: 
            { return MINUS;
            }
          case 87: break;
          case 13: 
            { return L_BRACKET;
            }
          case 88: break;
          case 14: 
            { return R_BRACKET;
            }
          case 89: break;
          case 15: 
            { return L_PARREN;
            }
          case 90: break;
          case 16: 
            { return R_PARREN;
            }
          case 91: break;
          case 17: 
            { return L_CURLY;
            }
          case 92: break;
          case 18: 
            { return R_CURLY;
            }
          case 93: break;
          case 19: 
            { return COMMA;
            }
          case 94: break;
          case 20: 
            { return LESS;
            }
          case 95: break;
          case 21: 
            { return GREATER;
            }
          case 96: break;
          case 22: 
            { return ESCLAMATION;
            }
          case 97: break;
          case 23: 
            { return EQ;
            }
          case 98: break;
          case 24: 
            { return MULTIPLY;
            }
          case 99: break;
          case 25: 
            { return MODULO;
            }
          case 100: break;
          case 26: 
            { return AT;
            }
          case 101: break;
          case 27: 
            { return QUESTION;
            }
          case 102: break;
          case 28: 
            { return DOLLAR;
            }
          case 103: break;
          case 29: 
            { return HASH;
            }
          case 104: break;
          case 30: 
            { return XOR;
            }
          case 105: break;
          case 31: 
            { return LINE_COMMENT;
            }
          case 106: break;
          case 32: 
            { return RULE_TYPE_ID;
            }
          case 107: break;
          case 33: 
            { return AND_AND;
            }
          case 108: break;
          case 34: 
            { return OR_OR;
            }
          case 109: break;
          case 35: 
            { return DOUBLE_LITERAL;
            }
          case 110: break;
          case 36: 
            { return RULE_BINARY_OPERATORS;
            }
          case 111: break;
          case 37: 
            { return ARROW_TOKEN;
            }
          case 112: break;
          case 38: 
            { return AS;
            }
          case 113: break;
          case 39: 
            { return IS;
            }
          case 114: break;
          case 40: 
            { return OR_KEYWORD;
            }
          case 115: break;
          case 41: 
            { return SHIFT_LEFT;
            }
          case 116: break;
          case 42: 
            { return LESS_EQUAL;
            }
          case 117: break;
          case 43: 
            { return SHIFT_RIGHT;
            }
          case 118: break;
          case 44: 
            { return GREATER_EQUAL;
            }
          case 119: break;
          case 45: 
            { return NOT_EQUAL;
            }
          case 120: break;
          case 46: 
            { return EQUAL;
            }
          case 121: break;
          case 47: 
            { return SIMILAR;
            }
          case 122: break;
          case 48: 
            { return RULE_ANY_REGEX;
            }
          case 123: break;
          case 49: 
            { return RULE_MIME_TYPE;
            }
          case 124: break;
          case 50: 
            { return RULE_UNARY_OPERATOS;
            }
          case 125: break;
          case 51: 
            { return RULE_ANY_DATE;
            }
          case 126: break;
          case 52: 
            { return DOCUMENT_SEPARATOR;
            }
          case 127: break;
          case 53: 
            { return RULE_BINARY_CLOJURE_OPERATORS;
            }
          case 128: break;
          case 54: 
            { return AND_KEYWORD;
            }
          case 129: break;
          case 55: 
            { return SHIFT_RIGHT_LOGICAL;
            }
          case 130: break;
          case 56: 
            { return VERSION_DIRECTIVE_KEYWORD;
            }
          case 131: break;
          case 57: 
            { return RULE_NULL_LITERAL;
            }
          case 132: break;
          case 58: 
            { return TRUE_LITERAL;
            }
          case 133: break;
          case 59: 
            { return WITH;
            }
          case 134: break;
          case 60: 
            { return WHEN;
            }
          case 135: break;
          case 61: 
            { return VAR_DIRECTIVE_KEYWORD;
            }
          case 136: break;
          case 62: 
            { return NAMESPACE_URI;
            }
          case 137: break;
          case 63: 
            { return USING;
            }
          case 138: break;
          case 64: 
            { return RULE_MATCH_LITERAL;
            }
          case 139: break;
          case 65: 
            { return FALSE_LITERAL;
            }
          case 140: break;
          case 66: 
            { return TYPE_DIRECTIVE_KEYWORD;
            }
          case 141: break;
          case 67: 
            { return UNLESS;
            }
          case 142: break;
          case 68: 
            { return RULE_RANGE_LITERAL;
            }
          case 143: break;
          case 69: 
            { return INPUT_DIRECTIVE_KEYWORD;
            }
          case 144: break;
          case 70: 
            { return REPLACE;
            }
          case 145: break;
          case 71: 
            { return DEFAULT;
            }
          case 146: break;
          case 72: 
            { return OUTPUT_DIRECTIVE_KEYWORD;
            }
          case 147: break;
          case 73: 
            { return OTHERWISE;
            }
          case 148: break;
          case 74: 
            { return FUNCTION_DIRECTIVE_KEYWORD;
            }
          case 149: break;
          case 75: 
            { return NAMESPACE_DIRECTIVE_KEYWORD;
            }
          case 150: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
